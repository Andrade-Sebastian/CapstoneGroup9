// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: emotiBits.proto
// Protobuf C++ Version: 5.28.3

#include "emotiBits.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace emotiBits {

inline constexpr DeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sessionname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceRequest::DeviceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceRequestDefaultTypeInternal() {}
  union {
    DeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceRequestDefaultTypeInternal _DeviceRequest_default_instance_;

inline constexpr Device::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : serial_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Device::Device(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceDefaultTypeInternal() {}
  union {
    Device _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceDefaultTypeInternal _Device_default_instance_;

inline constexpr DeviceList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : alldevices_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceList::DeviceList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceListDefaultTypeInternal() {}
  union {
    DeviceList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceListDefaultTypeInternal _DeviceList_default_instance_;
}  // namespace emotiBits
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_emotiBits_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_emotiBits_2eproto = nullptr;
const ::uint32_t
    TableStruct_emotiBits_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::emotiBits::Device, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::emotiBits::Device, _impl_.serial_),
        PROTOBUF_FIELD_OFFSET(::emotiBits::Device, _impl_.ip_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::emotiBits::DeviceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::emotiBits::DeviceRequest, _impl_.sessionname_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::emotiBits::DeviceList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::emotiBits::DeviceList, _impl_.alldevices_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::emotiBits::Device)},
        {10, -1, -1, sizeof(::emotiBits::DeviceRequest)},
        {19, -1, -1, sizeof(::emotiBits::DeviceList)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::emotiBits::_Device_default_instance_._instance,
    &::emotiBits::_DeviceRequest_default_instance_._instance,
    &::emotiBits::_DeviceList_default_instance_._instance,
};
const char descriptor_table_protodef_emotiBits_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017emotiBits.proto\022\temotiBits\"$\n\006Device\022\016"
    "\n\006serial\030\001 \001(\t\022\n\n\002ip\030\002 \001(\t\"$\n\rDeviceRequ"
    "est\022\023\n\013sessionName\030\001 \001(\t\"3\n\nDeviceList\022%"
    "\n\nallDevices\030\001 \003(\0132\021.emotiBits.Device2\210\001"
    "\n\013findDevices\022:\n\ngetDevices\022\021.emotiBits."
    "Device\032\025.emotiBits.DeviceList(\0010\001\022=\n\014fou"
    "ndDevices\022\030.emotiBits.DeviceRequest\032\021.em"
    "otiBits.Device0\001b\006proto3"
};
static ::absl::once_flag descriptor_table_emotiBits_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_emotiBits_2eproto = {
    false,
    false,
    304,
    descriptor_table_protodef_emotiBits_2eproto,
    "emotiBits.proto",
    &descriptor_table_emotiBits_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_emotiBits_2eproto::offsets,
    file_level_enum_descriptors_emotiBits_2eproto,
    file_level_service_descriptors_emotiBits_2eproto,
};
namespace emotiBits {
// ===================================================================

class Device::_Internal {
 public:
};

Device::Device(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:emotiBits.Device)
}
inline PROTOBUF_NDEBUG_INLINE Device::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::emotiBits::Device& from_msg)
      : serial_(arena, from.serial_),
        ip_(arena, from.ip_),
        _cached_size_{0} {}

Device::Device(
    ::google::protobuf::Arena* arena,
    const Device& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Device* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:emotiBits.Device)
}
inline PROTOBUF_NDEBUG_INLINE Device::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : serial_(arena),
        ip_(arena),
        _cached_size_{0} {}

inline void Device::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Device::~Device() {
  // @@protoc_insertion_point(destructor:emotiBits.Device)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Device::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.serial_.Destroy();
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Device::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Device_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Device::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Device>(),
            ::google::protobuf::Message::GetNewImpl<Device>(),
            ::google::protobuf::Message::GetClearImpl<Device>(), &Device::ByteSizeLong,
                &Device::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Device, _impl_._cached_size_),
            false,
        },
        &Device::kDescriptorMethods,
        &descriptor_table_emotiBits_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Device::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 33, 2> Device::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::emotiBits::Device>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Device, _impl_.ip_)}},
    // string serial = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Device, _impl_.serial_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string serial = 1;
    {PROTOBUF_FIELD_OFFSET(Device, _impl_.serial_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip = 2;
    {PROTOBUF_FIELD_OFFSET(Device, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\6\2\0\0\0\0\0"
    "emotiBits.Device"
    "serial"
    "ip"
  }},
};

PROTOBUF_NOINLINE void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:emotiBits.Device)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.serial_.ClearToEmpty();
  _impl_.ip_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Device::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Device& this_ = static_cast<const Device&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Device::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Device& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:emotiBits.Device)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string serial = 1;
          if (!this_._internal_serial().empty()) {
            const std::string& _s = this_._internal_serial();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "emotiBits.Device.serial");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string ip = 2;
          if (!this_._internal_ip().empty()) {
            const std::string& _s = this_._internal_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "emotiBits.Device.ip");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:emotiBits.Device)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Device::ByteSizeLong(const MessageLite& base) {
          const Device& this_ = static_cast<const Device&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Device::ByteSizeLong() const {
          const Device& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:emotiBits.Device)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string serial = 1;
            if (!this_._internal_serial().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_serial());
            }
            // string ip = 2;
            if (!this_._internal_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ip());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Device::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Device*>(&to_msg);
  auto& from = static_cast<const Device&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:emotiBits.Device)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_serial().empty()) {
    _this->_internal_set_serial(from._internal_serial());
  }
  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:emotiBits.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Device::InternalSwap(Device* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.serial_, &other->_impl_.serial_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
}

::google::protobuf::Metadata Device::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceRequest::_Internal {
 public:
};

DeviceRequest::DeviceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:emotiBits.DeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::emotiBits::DeviceRequest& from_msg)
      : sessionname_(arena, from.sessionname_),
        _cached_size_{0} {}

DeviceRequest::DeviceRequest(
    ::google::protobuf::Arena* arena,
    const DeviceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:emotiBits.DeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sessionname_(arena),
        _cached_size_{0} {}

inline void DeviceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceRequest::~DeviceRequest() {
  // @@protoc_insertion_point(destructor:emotiBits.DeviceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sessionname_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DeviceRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_DeviceRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DeviceRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<DeviceRequest>(),
            ::google::protobuf::Message::GetNewImpl<DeviceRequest>(),
            ::google::protobuf::Message::GetClearImpl<DeviceRequest>(), &DeviceRequest::ByteSizeLong,
                &DeviceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DeviceRequest, _impl_._cached_size_),
            false,
        },
        &DeviceRequest::kDescriptorMethods,
        &descriptor_table_emotiBits_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* DeviceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 43, 2> DeviceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::emotiBits::DeviceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string sessionName = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceRequest, _impl_.sessionname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sessionName = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceRequest, _impl_.sessionname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\13\0\0\0\0\0\0"
    "emotiBits.DeviceRequest"
    "sessionName"
  }},
};

PROTOBUF_NOINLINE void DeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:emotiBits.DeviceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionname_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceRequest& this_ = static_cast<const DeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:emotiBits.DeviceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string sessionName = 1;
          if (!this_._internal_sessionname().empty()) {
            const std::string& _s = this_._internal_sessionname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "emotiBits.DeviceRequest.sessionName");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:emotiBits.DeviceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceRequest::ByteSizeLong(const MessageLite& base) {
          const DeviceRequest& this_ = static_cast<const DeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceRequest::ByteSizeLong() const {
          const DeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:emotiBits.DeviceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string sessionName = 1;
            if (!this_._internal_sessionname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sessionname());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceRequest*>(&to_msg);
  auto& from = static_cast<const DeviceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:emotiBits.DeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionname().empty()) {
    _this->_internal_set_sessionname(from._internal_sessionname());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceRequest::CopyFrom(const DeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:emotiBits.DeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceRequest::InternalSwap(DeviceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionname_, &other->_impl_.sessionname_, arena);
}

::google::protobuf::Metadata DeviceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceList::_Internal {
 public:
};

DeviceList::DeviceList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:emotiBits.DeviceList)
}
inline PROTOBUF_NDEBUG_INLINE DeviceList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::emotiBits::DeviceList& from_msg)
      : alldevices_{visibility, arena, from.alldevices_},
        _cached_size_{0} {}

DeviceList::DeviceList(
    ::google::protobuf::Arena* arena,
    const DeviceList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:emotiBits.DeviceList)
}
inline PROTOBUF_NDEBUG_INLINE DeviceList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : alldevices_{visibility, arena},
        _cached_size_{0} {}

inline void DeviceList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceList::~DeviceList() {
  // @@protoc_insertion_point(destructor:emotiBits.DeviceList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DeviceList::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_DeviceList_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DeviceList::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<DeviceList>(),
            ::google::protobuf::Message::GetNewImpl<DeviceList>(),
            ::google::protobuf::Message::GetClearImpl<DeviceList>(), &DeviceList::ByteSizeLong,
                &DeviceList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DeviceList, _impl_._cached_size_),
            false,
        },
        &DeviceList::kDescriptorMethods,
        &descriptor_table_emotiBits_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* DeviceList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DeviceList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::emotiBits::DeviceList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .emotiBits.Device allDevices = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceList, _impl_.alldevices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .emotiBits.Device allDevices = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceList, _impl_.alldevices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::emotiBits::Device>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DeviceList::Clear() {
// @@protoc_insertion_point(message_clear_start:emotiBits.DeviceList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alldevices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceList& this_ = static_cast<const DeviceList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:emotiBits.DeviceList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .emotiBits.Device allDevices = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_alldevices_size());
               i < n; i++) {
            const auto& repfield = this_._internal_alldevices().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:emotiBits.DeviceList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceList::ByteSizeLong(const MessageLite& base) {
          const DeviceList& this_ = static_cast<const DeviceList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceList::ByteSizeLong() const {
          const DeviceList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:emotiBits.DeviceList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .emotiBits.Device allDevices = 1;
             {
              total_size += 1UL * this_._internal_alldevices_size();
              for (const auto& msg : this_._internal_alldevices()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceList*>(&to_msg);
  auto& from = static_cast<const DeviceList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:emotiBits.DeviceList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_alldevices()->MergeFrom(
      from._internal_alldevices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceList::CopyFrom(const DeviceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:emotiBits.DeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceList::InternalSwap(DeviceList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.alldevices_.InternalSwap(&other->_impl_.alldevices_);
}

::google::protobuf::Metadata DeviceList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace emotiBits
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_emotiBits_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
